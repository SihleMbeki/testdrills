<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="3" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-12T22:23:20 CAT" name="Default suite" finished-at="2020-12-12T22:24:07 CAT" duration-ms="47351">
    <groups>
    </groups>
    <test started-at="2020-12-12T22:23:20 CAT" name="Default test" finished-at="2020-12-12T22:24:07 CAT" duration-ms="47351">
      <class name="testDrills.Automation.testing.AppTest">
        <test-method is-config="true" signature="setTestSuite()[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:23:04 CAT" name="setTestSuite" finished-at="2020-12-12T22:23:20 CAT" duration-ms="15301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTestSuite -->
        <test-method is-config="true" signature="setTestReport()[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:23:20 CAT" name="setTestReport" finished-at="2020-12-12T22:23:20 CAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setTestReport -->
        <test-method is-config="true" signature="method3()[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:23:20 CAT" name="method3" finished-at="2020-12-12T22:23:20 CAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method is-config="true" signature="createTestReport(java.lang.reflect.Method)[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:23:20 CAT" name="createTestReport" finished-at="2020-12-12T22:23:20 CAT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testDrills.Automation.testing.AppTest.test(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestReport -->
        <test-method signature="test(java.lang.String, java.lang.String)[pri:1, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:23:20 CAT" name="test" data-provider="getTableData" finished-at="2020-12-12T22:24:04 CAT" duration-ms="44165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Johne]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Doe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method signature="test(java.lang.String, java.lang.String)[pri:1, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:24:04 CAT" name="test" data-provider="getTableData" finished-at="2020-12-12T22:24:07 CAT" duration-ms="3129" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sihle]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mbeki]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-R3IULL6', ip: '172.27.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\Users\sihle\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58308}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 7df03bff584744f1e822eeb620a7285e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: invalid session id
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-R3IULL6', ip: '172.27.0.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\Users\sihle\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:58308}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 7df03bff584744f1e822eeb620a7285e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteNavigation.to(RemoteWebDriver.java:857)
at testDrills.Automation.testing.AppTest.test(AppTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="createTestReport(java.lang.reflect.Method)[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:24:04 CAT" name="createTestReport" finished-at="2020-12-12T22:24:04 CAT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testDrills.Automation.testing.AppTest.test(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestReport -->
        <test-method is-config="true" signature="postMethod3()[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:24:07 CAT" name="postMethod3" finished-at="2020-12-12T22:24:07 CAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postMethod3 -->
        <test-method is-config="true" signature="postMethod2()[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:24:07 CAT" name="postMethod2" finished-at="2020-12-12T22:24:07 CAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postMethod2 -->
        <test-method is-config="true" signature="postMethod1()[pri:0, instance:testDrills.Automation.testing.AppTest@be35cd9]" started-at="2020-12-12T22:24:07 CAT" name="postMethod1" finished-at="2020-12-12T22:24:07 CAT" duration-ms="325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postMethod1 -->
      </class> <!-- testDrills.Automation.testing.AppTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
